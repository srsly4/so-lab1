Program contactbook został celowo zmodyfikowany, aby powodował wygenerowanie zrzutu pamięci poprzez kompilację przy pomocy polecenia:
    make contactbook-bugged
Polecenie to definiuję w preprocessorze frazę BUGGED, przez którą podczas dodawania przykładowego wpisu do bazy zmienna added zostaje ustawiona na NULL. Następnie pobierając indeks dodanej wartości, próbujemy uzyskać dostęp do pola struktury wskaźnika, który jest NULLem.

Plik core został wygenerowany w lokalizacji /var/lib/systemd/coredump, posiadał nazwę procesu i jego numer (PID). Po dekompresji LZ4 i wykonaniu polecenia:
    gdb ./../bin/contactbook-bugged coredump
otrzymałem informację, że powodem błędu krytycznego programu był niedozwolony dostęp do pamięci:
    Core was generated by `./contactbook-bugged'.
    Program terminated with signal SIGSEGV, Segmentation fault.
    #0  0x0000000000401c8a in test_cunidb (db=0xefb010) at /home/sirius/Sysopy/contactbook/src/main.c:177
    177         printf(" [#%d][+]", added->index);

Następnie, aby uzyskać więcej informacji o położeniu występowania błędu wpisałem polecenie:
    bt full
Otrzymując:
    #0  0x0000000000401c8a in test_cunidb (db=0xefb010) at /home/sirius/Sysopy/contactbook/src/main.c:177
        counter = 1000
        added = 0x0
        searched = 0x0
        ndx = 0
    #1  0x0000000000402013 in main () at /home/sirius/Sysopy/contactbook/src/main.c:288
            t = 1489332008
            db = 0xefb010

Na podstawie powyższych informacji mogłem ustalić, że linijką kodu powodującą błąd krytyczny, jest linia 177 pliku main.c:
    printf(" [#%d][+]", added->index);
Debugger pokazuje wartość zmiennej added, która wynosi NULL. Dzięki tym informacjom możliwe jest ustalenie przyczyny błędu na błędną inicjalizację zmiennej added kilka linijek wyżej:
    struct contact_uninode* added = cunidb_get(db, 0);
Indeks 0 nie ma prawa istnieć w bazie, dlatego funkcja zwraca NULL. Należało by więc otoczyć wywołanie wyrażenia added->index wyrażeniem warunkowym sprawdzającym prawidłową inicjalizację zmiennej added.
    
